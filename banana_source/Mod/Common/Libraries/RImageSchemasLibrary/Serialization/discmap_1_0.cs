//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=1.1.4322.2032.
// 
namespace RImageSchemas.Serialization.Misc.DiscMap {
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute("DiscMap", Namespace="", IsNullable=false)]
    public class DiscInfo {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DiscInfo")]
        public DiscInfo1 DiscInfo1;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="DiscInfo")]
    [System.Xml.Serialization.XmlRootAttribute("DiscInfo", Namespace="", IsNullable=false)]
    public class DiscInfo1 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TrackInfo")]
        public TrackInfo[] TrackInfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FreeBlocks;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FirstFreeBlock;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LeadoutStartBlock;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NumberOfSessions;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NumberOfTracks;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(DiscInfoIsOrangeBook.@false)]
        public DiscInfoIsOrangeBook IsOrangeBook = DiscInfoIsOrangeBook.@false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(DiscInfoIsBlueBook.@false)]
        public DiscInfoIsBlueBook IsBlueBook = DiscInfoIsBlueBook.@false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Upc;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public class TrackInfo : SubchannelControlBits {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SessionNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TrackNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(TrackInfoTrackType.Audio)]
        public TrackInfoTrackType TrackType = TrackInfoTrackType.Audio;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StartBlock;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NumberOfBlocks;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PregapBlocks;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(TrackInfoRunoutSubtracted.@false)]
        public TrackInfoRunoutSubtracted RunoutSubtracted = TrackInfoRunoutSubtracted.@false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(TrackInfoPregapSubtracted.@false)]
        public TrackInfoPregapSubtracted PregapSubtracted = TrackInfoPregapSubtracted.@false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MaxIndex;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(TrackInfoHasPVD.@false)]
        public TrackInfoHasPVD HasPVD = TrackInfoHasPVD.@false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Isrc;
    }
    
    /// <remarks/>
    public enum TrackInfoTrackType {
        
        /// <remarks/>
        Audio,
        
        /// <remarks/>
        Mode1,
        
        /// <remarks/>
        XAForm1,
        
        /// <remarks/>
        XAForm2,
        
        /// <remarks/>
        XAMixed,
        
        /// <remarks/>
        Mode2,
        
        /// <remarks/>
        XAMode1,
        
        /// <remarks/>
        CDI,
    }
    
    /// <remarks/>
    public enum TrackInfoRunoutSubtracted {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    /// <remarks/>
    public enum TrackInfoPregapSubtracted {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    /// <remarks/>
    public enum TrackInfoHasPVD {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TrackInfo))]
    public class SubchannelControlBits {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SubchannelControlBits")]
        public SubchannelControlBits1 SubchannelControlBits1;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="SubchannelControlBits")]
    [System.Xml.Serialization.XmlRootAttribute("SubchannelControlBits", Namespace="", IsNullable=false)]
    public class SubchannelControlBits1 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(SubchannelControlBitsPreEmphasis.@false)]
        public SubchannelControlBitsPreEmphasis PreEmphasis = SubchannelControlBitsPreEmphasis.@false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(SubchannelControlBitsAllowCopy.@false)]
        public SubchannelControlBitsAllowCopy AllowCopy = SubchannelControlBitsAllowCopy.@false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(SubchannelControlBitsData.@false)]
        public SubchannelControlBitsData Data = SubchannelControlBitsData.@false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(SubchannelControlBitsFourChannel.@false)]
        public SubchannelControlBitsFourChannel FourChannel = SubchannelControlBitsFourChannel.@false;
    }
    
    /// <remarks/>
    public enum SubchannelControlBitsPreEmphasis {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    /// <remarks/>
    public enum SubchannelControlBitsAllowCopy {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    /// <remarks/>
    public enum SubchannelControlBitsData {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    /// <remarks/>
    public enum SubchannelControlBitsFourChannel {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    /// <remarks/>
    public enum DiscInfoIsOrangeBook {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    /// <remarks/>
    public enum DiscInfoIsBlueBook {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
}
