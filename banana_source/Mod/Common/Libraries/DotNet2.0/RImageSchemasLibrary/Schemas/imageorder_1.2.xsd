<?xml version="1.0" encoding="UTF-8" ?>
<!--W3C Schema generated by XMLSpy v2005 rel. 3 U (http://www.altova.com)-->
<!--Please add namespace attributes, a targetNamespace attribute and import elements according to your requirements-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"
	elementFormDefault="qualified">
	<xs:import namespace="http://www.w3.org/XML/1998/namespace" />
	<xs:element name="ImageOrder" msdata:IsDataSet="true">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Target" />
				<xs:element ref="Format" />
				<xs:element ref="Source" />
				<xs:element ref="Output" />
				<xs:element minOccurs="0" ref="Rules" />
				<xs:element minOccurs="0" ref="VolumeName" />
				<xs:element minOccurs="0" ref="PVDInfo" />
				<xs:element minOccurs="0" ref="Controls" />
			</xs:sequence>
			<xs:attribute name="OrderId" use="required" />
			<xs:attribute name="ClientId" use="required" />
			<xs:attribute name="Originator" />
			<xs:attribute name="Priority" default="Normal">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="Low" />
						<xs:enumeration value="Normal" />
						<xs:enumeration value="High" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<!-- This is the name of the destination image server -->
	<xs:element name="Target">
		<xs:complexType>
			<xs:attribute name="Cluster" default="DefaultImageCluster" />
			<xs:attribute name="Server" default="ANY" />
		</xs:complexType>
	</xs:element>
	<!-- Specifying Server as ANY lets any server process the job -->
	<!-- These are the kinds of file system formats and variants that the imager can create -->
	<!-- UDF cannot be combined with other formats, that is why it is separate. -->
	<xs:element name="Format">
		<xs:complexType>
			<xs:sequence>
				<xs:choice>
					<xs:element ref="UDFFormat" />
					<xs:element ref="PCMACFormat" />
				</xs:choice>
				<xs:element ref="FormatOptions" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="UDFFormat">
		<xs:complexType>
			<xs:attribute name="UDF" default="102ISO">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="102ISO" />
						<xs:enumeration value="150" />
						<xs:enumeration value="150_Unicode" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<!-- The 102ISO format must be used for DVD players -->
	<xs:element name="PCMACFormat">
		<xs:complexType>
			<xs:attribute name="ISO" default="2">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="none" />
						<xs:enumeration value="1" />
						<xs:enumeration value="2" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="VCDSlides" default="false">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true" />
						<xs:enumeration value="false" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Apple" default="none">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="none" />
						<xs:enumeration value="HFS" />
						<xs:enumeration value="ISOExt" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Joliet" default="false">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true" />
						<xs:enumeration value="false" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Rockridge" default="false">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true" />
						<xs:enumeration value="false" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<!-- Specifying HFS with any other ISO format will cause a hybrid disc to be created -->
	<!-- These are options that affect the way the image filenames are handled -->
	<xs:element name="FormatOptions">
		<xs:complexType>
			<xs:attribute name="ForceUpperCase" default="false">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true" />
						<xs:enumeration value="false" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="AllowMultipleFilePaths" default="true">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true" />
						<xs:enumeration value="false" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="ForceDot" default="true">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true" />
						<xs:enumeration value="false" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="ForceShort" default="false">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true" />
						<xs:enumeration value="false" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Versions" default="true">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true" />
						<xs:enumeration value="false" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="IgnoreBadFiles" default="false">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true" />
						<xs:enumeration value="false" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="CaseSensitive" default="false">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true" />
						<xs:enumeration value="false" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Zip" default="false">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true" />
						<xs:enumeration value="false" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="AllowBootableCD" default="true">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true" />
						<xs:enumeration value="false" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<!-- ForceUpperCase will make all of the letters upper case, this works for all image formats. -->
	<!-- AllowMultipleFilePaths is set to allow the imager to have multiple directory entries to the same file, this saves space.  The imager handles it automatically -->
	<!-- ForceDot will add the '.' to any filename with no extension. -->
	<!-- ForceShort maps all long filenames into the 8.3 format -->
	<!-- Versions adds the ;1 to the end of all files, strict ISO compliance requires this, but many OS's don't care.  Set to off to save 2 bytes on every filename. -->
	<!-- IgnoreBadFiles allows the imager to remove files that can't be opened.  This is useful to ignore files that are open while imaging and other conditions. -->
	<!-- CaseSensitive lets the imager use case while sorting names.  This is useful for Unix/Linux only. -->
	<!-- Zip causes the imager to place all files other than those in the root folder into a zip archive file. -->
	<!-- AllowBootableCD will only create a bootable cd if the El Torito boot files are found in the file list -->
	<!-- One or more editlist or parent folders may be used -->
	<xs:element name="Source">
		<xs:complexType>
			<xs:choice maxOccurs="unbounded">
				<xs:element ref="ParentFolder" />
				<xs:element ref="EditList" />
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="ParentFolder">
		<xs:complexType>
			<xs:attribute name="ParentFolderPath" use="required" />
			<xs:attribute name="Destination" default="both">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="PC" />
						<xs:enumeration value="Mac" />
						<xs:enumeration value="both" />
						<xs:enumeration value="default" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="DirTimeStamp" />
		</xs:complexType>
	</xs:element>
	<!-- The Destination attribute is currently not implemented in the imager, but will be later -->
	<!-- PC sends the files to the ISO section of a hybrid CD, Mac to the HFS section, both to both ISO and HFS, default uses the ini mapping file -->
	<!-- It is also possible to specify the destination inside the editlist file by putting P MA BOTH: or DEFAULT: at the beginning of each line -->
	<!-- The editlist destination entries will override the destination settings in this xml order request. See the editlist documentation for more information. -->
	<!-- The parentfolderpath is the path on a drive that will become the root on the CD, all files and subfolders will be copied to the CD -->
	<!-- The DirTimeStamp will force the timestamp on CD folders to the specified value, files are not affected -->
	<!-- The time format is CCYY-MM-DD HH:MM:SS -->
	<xs:element name="EditList">
		<xs:complexType>
			<xs:attribute name="EditListPath" use="required" />
			<xs:attribute name="Destination" default="both">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="PC" />
						<xs:enumeration value="Mac" />
						<xs:enumeration value="both" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="DirTimeStamp" />
		</xs:complexType>
	</xs:element>
	<!-- The editlistpath is the full path to an editlist file that will control the contents placed on the CD -->
	<!-- The DirTimeStamp will force the timestamp on CD folders to the specified value, files are not affected -->
	<!-- This is the output filename and options -->
	<xs:element name="Output">
		<xs:complexType>
			<xs:attribute name="ImageFile" use="required" />
			<xs:attribute name="Type" default="Normal">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="Normal" />
						<xs:enumeration value="PowerImage" />
						<xs:enumeration value="RimageHeader" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="CDXA" default="false">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true" />
						<xs:enumeration value="false" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Postgap" default="true">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true" />
						<xs:enumeration value="false" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Size" default="74">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="0" />
						<xs:enumeration value="63" />
						<xs:enumeration value="74" />
						<xs:enumeration value="80" />
						<xs:enumeration value="500" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<!-- CDXA causes the imager to use 2056 byte sectors and to add the CD-XA headers. -->
	<!-- Postgap adds the 150 blocks at the end of the image file.  This is not required except for older CD-ROM drives. -->
	<!-- Size is in minutes, 500 is a 4.7Gb DVD, 0 means the size isn't checked -->
	<xs:element name="Rules">
		<xs:complexType>
			<xs:attribute name="CheckNames" default="true">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true" />
						<xs:enumeration value="false" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="AllowDirExt" default="false">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true" />
						<xs:enumeration value="false" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="CheckLevels" default="false">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true" />
						<xs:enumeration value="false" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<!-- These are optional rules that control the kinds of conformity checking that is done while imaging -->
	<!-- Checknames performs name checking on both file and dir names -->
	<!-- AllowDirExt lets the imager use directory names with the .ext format, e.g. folder.dir.  Normally ISO requires that folder names have no extension. -->
	<!-- CheckLevels enforces the ISO 8 level folder limit. -->
	<!-- If the MacVolName is blank (default) the VolName value is used for both ISO and HFS -->
	<!-- HFS doesn't allow a blank volume name, so the default is "No Label" -->
	<xs:element name="VolumeName">
		<xs:complexType>
			<xs:attribute name="VolName" default="No Label" />
			<xs:attribute name="MacVolName" default="" />
		</xs:complexType>
	</xs:element>
	<!-- These are the PVD and SVD ISO fields -->
	<xs:element name="PVDInfo">
		<xs:complexType>
			<xs:attribute name="PVDSystem" />
			<xs:attribute name="PVDVolumeSet" />
			<xs:attribute name="PVDCopyright" />
			<xs:attribute name="PVDPublisher" />
			<xs:attribute name="PVDPreparer" />
			<xs:attribute name="PVDApplication" />
			<xs:attribute name="PVDAbstract" />
			<xs:attribute name="PVDBibliography" />
			<xs:attribute name="PVDExpirationDate" />
			<xs:attribute name="PVDEffectiveDate" />
			<xs:attribute name="GMTOffset" />
		</xs:complexType>
	</xs:element>
	<!-- GMTOffset must be a value from -48 to +52 and is the number of 15 minute increments from GMT, more correctly known as UTC -->
	<!-- The overwrite control allows an existing image file to be overwritten, if this option is off, the file will not be overwritten and an error will be returned. -->
	<!-- The wait for space command is -1 to return error if not enough free space is found, otherwise it is the number of extra Mbtyes to wait for. -->
	<xs:element name="Controls">
		<xs:complexType>
			<xs:attribute name="Overwrite" default="true">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true" />
						<xs:enumeration value="false" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="WaitForSpace" />
		</xs:complexType>
	</xs:element>
</xs:schema>